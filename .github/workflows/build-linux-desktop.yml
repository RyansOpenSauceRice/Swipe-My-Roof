name: Build Linux Desktop App

on:
  push:
    branches: [ main, feature/* ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Allow manual triggering

jobs:
  build-linux:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
        
    - name: Install Linux dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libfontconfig1-dev \
          libfreetype6-dev \
          libx11-dev \
          libxrandr-dev \
          libxi-dev \
          libxcursor-dev \
          libxinerama-dev \
          libgl1-mesa-dev \
          libglu1-mesa-dev \
          libasound2-dev \
          libpulse-dev \
          libudev-dev \
          libxss1 \
          libgconf-2-4 \
          libxss1 \
          libappindicator1 \
          libnss3 \
          libatk-bridge2.0-0 \
          libdrm2 \
          libgtk-3-0 \
          libgbm1
          
    - name: Restore dependencies
      run: dotnet restore src/SwipeMyRoof.AvaloniaUI/SwipeMyRoof.AvaloniaUI.csproj
      
    - name: Build application
      run: |
        dotnet build src/SwipeMyRoof.AvaloniaUI/SwipeMyRoof.AvaloniaUI.csproj \
          --configuration Release \
          --no-restore \
          --verbosity normal
          
    - name: Publish self-contained Linux app
      run: |
        dotnet publish src/SwipeMyRoof.AvaloniaUI/SwipeMyRoof.AvaloniaUI.csproj \
          --configuration Release \
          --runtime linux-x64 \
          --self-contained true \
          --output ./publish/linux-x64 \
          -p:PublishSingleFile=true \
          -p:PublishTrimmed=true \
          -p:TrimMode=partial \
          -p:IncludeNativeLibrariesForSelfExtract=true
          
    - name: Create executable package
      run: |
        cd ./publish/linux-x64
        chmod +x SwipeMyRoof.AvaloniaUI
        
        # Create a simple launcher script
        cat > SwipeMyRoof.sh << 'EOF'
        #!/bin/bash
        SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
        cd "$SCRIPT_DIR"
        ./SwipeMyRoof.AvaloniaUI "$@"
        EOF
        chmod +x SwipeMyRoof.sh
        
        # Create README for users
        cat > README.txt << 'EOF'
        Swipe My Roof - Linux Desktop App
        =================================
        
        Quick Start:
        1. Extract this archive
        2. Double-click SwipeMyRoof.sh (or run ./SwipeMyRoof.sh in terminal)
        3. If permission denied, run: chmod +x SwipeMyRoof.sh
        
        Requirements:
        - Linux x64 (Ubuntu 20.04+, Fedora 33+, or equivalent)
        - No additional dependencies needed (self-contained)
        
        First Run Setup:
        1. Go to Settings tab
        2. Add your Bing Maps API key
        3. Configure AI provider (OpenAI, Anthropic, etc.)
        4. Start validating roof colors!
        
        Troubleshooting:
        - If app doesn't start, try running from terminal to see error messages
        - Ensure you have a graphics driver installed
        - For Wayland users: may need to set GDK_BACKEND=x11
        
        Version: Built from commit ${{ github.sha }}
        Date: $(date)
        EOF
        
        # Create version info
        echo "${{ github.sha }}" > VERSION
        echo "$(date -u +"%Y-%m-%d %H:%M:%S UTC")" > BUILD_DATE
        
    - name: Create downloadable archive
      run: |
        cd ./publish
        tar -czf SwipeMyRoof-Linux-x64.tar.gz linux-x64/
        
        # Create zip for Windows users who might download
        zip -r SwipeMyRoof-Linux-x64.zip linux-x64/
        
    - name: Upload Linux build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: SwipeMyRoof-Linux-x64
        path: |
          ./publish/SwipeMyRoof-Linux-x64.tar.gz
          ./publish/SwipeMyRoof-Linux-x64.zip
        retention-days: 30
        
    - name: Upload build info
      uses: actions/upload-artifact@v4
      with:
        name: build-info
        path: |
          ./publish/linux-x64/VERSION
          ./publish/linux-x64/BUILD_DATE
          ./publish/linux-x64/README.txt
        retention-days: 30

  # Create a release for main branch builds
  create-release:
    needs: build-linux
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: SwipeMyRoof-Linux-x64
        path: ./artifacts
        
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: linux-build-${{ github.run_number }}
        release_name: Linux Desktop Build ${{ github.run_number }}
        body: |
          üêß **Linux Desktop Build - Ready for Testing**
          
          **One-Click Download:** Download the `.tar.gz` or `.zip` file below
          
          **Quick Start:**
          1. Download `SwipeMyRoof-Linux-x64.tar.gz`
          2. Extract: `tar -xzf SwipeMyRoof-Linux-x64.tar.gz`
          3. Run: `cd linux-x64 && ./SwipeMyRoof.sh`
          
          **What's Included:**
          ‚úÖ Self-contained Linux x64 executable
          ‚úÖ All dependencies bundled (no installation needed)
          ‚úÖ Bing Maps satellite imagery integration
          ‚úÖ OSM submission pipeline
          ‚úÖ AI-powered roof color analysis
          ‚úÖ SQLite database (F-Droid compliant)
          
          **Requirements:**
          - Linux x64 (Ubuntu 20.04+, Fedora 33+, or equivalent)
          - Graphics driver (for UI rendering)
          
          **First Run:**
          1. Add Bing Maps API key in Settings
          2. Configure AI provider (OpenAI/Anthropic/etc.)
          3. Start validating roof colors!
          
          **Build Info:**
          - Commit: ${{ github.sha }}
          - Built: $(date -u +"%Y-%m-%d %H:%M:%S UTC")
          - Size: ~50-100MB (self-contained)
          
          **Feedback Welcome!** üöÄ
          Report issues or suggestions in the GitHub Issues tab.
        draft: false
        prerelease: true
        
    - name: Upload Release Asset (tar.gz)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./artifacts/SwipeMyRoof-Linux-x64.tar.gz
        asset_name: SwipeMyRoof-Linux-x64.tar.gz
        asset_content_type: application/gzip
        
    - name: Upload Release Asset (zip)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./artifacts/SwipeMyRoof-Linux-x64.zip
        asset_name: SwipeMyRoof-Linux-x64.zip
        asset_content_type: application/zip